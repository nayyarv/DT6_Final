package Enigma;

/**
 * File Name:
 * Creator: Varun Nayyar
 * Date: 12/04/12
 * Desc:
 */
public class Letter { //wanted to extend Character :(
    private char letter;

    public Letter(char c){
        setLetter(c);
    }

    public Letter(Letter l){
        setLetter(l);
    }

    public void nextLetter(){
        if(letter=='Z'){
            letter='A';
        } else {
            letter++;
        }
    }


    public void prevLetter(){
        if(letter=='A'){
            letter='Z';
        } else {
            letter--;
        }
    }

    public void setLetter(char c){
        if(Character.isLetter(c)){
            letter=Character.toUpperCase(c);
        } else {
            System.err.println(c + " is not a letter you moron!!");
        }
    }

    public void setLetter(Letter l){
        this.letter=l.getLetter();
    }

    public char getLetter() {
        return letter;
    }

    public int charIndex(){
        return Character.getNumericValue(letter)-Character.getNumericValue('A');
    }

    public void charFromIndex(int index){
        assert (index<26);
        //char c = (char)('A'+index);
        //System.out.println("Index is: "+ index +" Char is: "+c);
        setLetter((char)('A'+index));
    }

    @Override
    public String toString() {
        return letter+"";

    }

    @Override
    //As generated by my super awesome IDE
    //That'll do IntelliJ, that'll do :-P
    public boolean equals(Object o) {
        if (this == o) {
            return true; //if they are the same
        }
        if (o == null || this.getClass() != o.getClass()) {
            //System.err.println("Null class or wrong class");
            return false; //if object is null or different class

        }

        Letter letter1 = (Letter) o;//casting

        return (letter == letter1.getLetter());

    }

    @Override
    //I have to override both, I cant just override the one
    public int hashCode() {
        return (int) letter;
    }
}
